services:
 
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.0
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    networks:
      - transcendence-network
    container_name: logging-setup
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
          fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: kibana\n"\
          "    dns:\n"\
          "      - kibana\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120



  es01:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.0
    container_name: logging-es01
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      # - cluser.routing.allocation.disk.threshold_enabled=false
      # - "cluster.service.timeout=60s"
      # - "index.refresh_interval=30s"
      # - "http.max_content_length=100m"
      # - "http.request.timeout=60s"
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
    mem_limit: 4g
    cpus: 2.0
    networks:
      - transcendence-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.18.0
    labels: 
      co.elastic.logs/module: kibana
    restart: unless-stopped
    container_name: logging-kibana
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - "ELASTICSEARCH_REQUESTTIMEOUT=90000"
      - "ELASTICSEARCH_PINGTIMEOUT=90000"
      - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - "XPACK_ML_ENABLED=false"
      - "XPACK_REPORTING_ENABLED=false"
      - "XPACK_SECURITY_SECURECOOKIES=false"
    volumes:
      - kibanadata:/usr/share/kibana/data
      - certs:/usr/share/kibana/config/certs
    mem_limit: 2g
    networks:
      - transcendence-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      es01:
        condition: service_healthy

      
  fluentbit:
    # image: fluent/fluent-bit:sha2 56:33f76bb07fc1c7acf356d33292f95f8465ee47dbf13cc5e6b2db47d3ff02c3fd
    build:
      context: ./fluentbit
      dockerfile: dockerfile
    container_name: logging-fluentbit
    volumes:
      - certs:/fluent-bit/config/certs:ro
      - ./fluentbit/config:/etc/fluent-bit:ro
      - ../vault/agent/env/:/fluent-bit/env:ro
      - /var/log:/var/log:ro
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
      - "/proc:/hostfs/proc:ro"
      - "/:/hostfs:ro"
    ports:
      - "24224:24224"  # Forward protocol
    networks:
      - transcendence-network
    environment:
      - FLUENT_ELASTICSEARCH_HOST=es01
      - FLUENT_ELASTICSEARCH_PORT=9200
      - FLUENT_ELASTICSEARCH_USER=kibana_system
      - FLUENT_ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - FLUENT_ELASTICSEARCH_SSL=true
      - FLUENT_ELASTICSEARCH_SSL_CA=/fluent-bit/certs/ca/ca.crt
      - FLUENT_ELASTICSEARCH_SSL_VERIFY=true
    depends_on:
      es01:
        condition: service_healthy
    command: >
      /fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.conf
      

volumes:
  certs:
    driver: local
  esdata01:
     driver: local
  kibanadata:
    driver: local
  metricbeatdata01:
    driver: local
  filebeatdata01:
    driver: local
  logstashdata01:
    driver: local
