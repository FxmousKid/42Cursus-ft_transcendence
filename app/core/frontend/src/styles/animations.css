/* Animations for Pong game */

/* Game specific animations */
@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes pulsate {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 10px rgba(10, 102, 255, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba(10, 102, 255, 0.8);
  }
}

@keyframes blob-animation {
  0% {
    border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
    transform: translate(0, 0) rotate(0deg);
  }
  50% {
    border-radius: 30% 60% 70% 40%/50% 60% 30% 60%;
    transform: translate(20px, 20px) rotate(45deg);
  }
  100% {
    border-radius: 40% 60% 30% 70%/60% 30% 70% 40%;
    transform: translate(-20px, -20px) rotate(-45deg);
  }
}

@keyframes paddle-hit {
  0% {
    transform: scaleX(1);
  }
  50% {
    transform: scaleX(0.9);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes score-pop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes ball-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes countdown {
  0%, 100% {
    opacity: 0;
    transform: scale(0.5);
  }
  20%, 80% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes game-start {
  0% {
    opacity: 0;
    transform: translateY(-50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes game-over {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes winner-celebration {
  0%, 100% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(1.1) rotate(-5deg);
  }
  50% {
    transform: scale(1) rotate(0deg);
  }
  75% {
    transform: scale(1.1) rotate(5deg);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Animation classes */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulsate {
  animation: pulsate 2s ease-in-out infinite;
}

.animate-glow {
  animation: glow 1.5s ease-in-out infinite;
}

.animate-blob {
  animation: blob-animation 15s infinite alternate;
}

.animate-paddle-hit {
  animation: paddle-hit 0.2s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

.animate-score-pop {
  animation: score-pop 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

.animate-ball-spin {
  animation: ball-spin 1s linear infinite;
}

.animate-countdown {
  animation: countdown 1s ease-in-out;
}

.animate-game-start {
  animation: game-start 0.8s cubic-bezier(0.17, 0.67, 0.83, 0.67);
}

.animate-game-over {
  animation: game-over 0.8s cubic-bezier(0.17, 0.67, 0.83, 0.67);
}

.animate-winner {
  animation: winner-celebration 1.5s ease-in-out 3;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-spin-slow {
  animation: spin 20s linear infinite;
}

/* Background effects */
.bg-gradient-radial {
  background-image: radial-gradient(circle at center, var(--primary) 0%, transparent 70%);
}

.bg-gradient-game {
  background-image: 
    radial-gradient(circle at top left, rgba(10, 102, 255, 0.1), transparent 40%),
    radial-gradient(circle at bottom right, rgba(10, 102, 255, 0.1), transparent 40%);
}

.bg-grid {
  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Decorative elements */
.blob {
  position: absolute;
  border-radius: 50%;
  opacity: 0.1;
  filter: blur(3rem);
  animation: blob-animation 15s infinite alternate;
}

.blob-primary {
  background-color: var(--primary);
}

.blob-secondary {
  background-color: var(--secondary);
  animation-delay: 2s;
}

.blob-accent {
  background-color: var(--accent);
  animation-delay: 4s;
}

/* Score counter effect */
.score-counter {
  transition: transform 0.2s ease;
}

.score-counter.updated {
  animation: score-pop 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

/* Game state transitions */
.fade-in {
  animation: fadeIn 0.3s ease-in;
}

.fade-out {
  animation: fadeOut 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
} 