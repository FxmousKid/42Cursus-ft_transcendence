/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  TournamentScores,
  TournamentScoresInterface,
} from "../TournamentScores";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "player1Name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "player2Name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "player1Score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "player2Score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "winnerName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recordedBy",
        type: "address",
      },
    ],
    name: "MatchRecorded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recorder",
        type: "address",
      },
    ],
    name: "addAuthorizedRecorder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedRecorders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tournamentId",
        type: "uint256",
      },
    ],
    name: "getTournamentMatchCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tournamentId",
        type: "uint256",
      },
    ],
    name: "getTournamentMatches",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "matchId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tournamentId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "player1Name",
            type: "string",
          },
          {
            internalType: "string",
            name: "player2Name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "player1Score",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "player2Score",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "winnerName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recordedBy",
            type: "address",
          },
        ],
        internalType: "struct TournamentScores.MatchRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tournamentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
    ],
    name: "isMatchRecorded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matchExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tournamentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_player1Name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_player2Name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_player1Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_player2Score",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_winnerName",
        type: "string",
      },
    ],
    name: "recordMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recorder",
        type: "address",
      },
    ],
    name: "removeAuthorizedRecorder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tournamentMatches",
    outputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "player1Name",
        type: "string",
      },
      {
        internalType: "string",
        name: "player2Name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "player1Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "player2Score",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "winnerName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recordedBy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600380546001600160a01b031916339081179091556000908152600260205260409020805460ff19166001179055610efa8061004e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639bb0025c116100665780639bb0025c14610155578063ac9a5e9a14610193578063b68ac065146101b6578063b99903da146101c9578063d8c57e85146101f757600080fd5b80633602d1f8146100a35780633fbf9201146100b857806362d8da44146100e95780638267334e146100fc5780638da5cb5b1461012a575b600080fd5b6100b66100b1366004610962565b610217565b005b6100cb6100c6366004610992565b61026e565b6040516100e0999897969594939291906109fa565b60405180910390f35b6100b66100f7366004610962565b61047b565b61011c61010a366004610a76565b60009081526020819052604090205490565b6040519081526020016100e0565b60035461013d906001600160a01b031681565b6040516001600160a01b0390911681526020016100e0565b610183610163366004610992565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100e0565b6101836101a1366004610962565b60026020526000908152604090205460ff1681565b6100b66101c4366004610b32565b6104c6565b6101836101d7366004610992565b600091825260016020908152604080842092845291905290205460ff1690565b61020a610205366004610a76565b6106f7565b6040516100e09190610be1565b6003546001600160a01b0316331461024a5760405162461bcd60e51b815260040161024190610cd8565b60405180910390fd5b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6000602052816000526040600020818154811061028a57600080fd5b9060005260206000209060090201600091509150508060000154908060010154908060020180546102ba90610d1a565b80601f01602080910402602001604051908101604052809291908181526020018280546102e690610d1a565b80156103335780601f1061030857610100808354040283529160200191610333565b820191906000526020600020905b81548152906001019060200180831161031657829003601f168201915b50505050509080600301805461034890610d1a565b80601f016020809104026020016040519081016040528092919081815260200182805461037490610d1a565b80156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050908060040154908060050154908060060180546103e290610d1a565b80601f016020809104026020016040519081016040528092919081815260200182805461040e90610d1a565b801561045b5780601f106104305761010080835404028352916020019161045b565b820191906000526020600020905b81548152906001019060200180831161043e57829003601f168201915b5050505060078301546008909301549192916001600160a01b0316905089565b6003546001600160a01b031633146104a55760405162461bcd60e51b815260040161024190610cd8565b6001600160a01b03166000908152600260205260409020805460ff19169055565b3360009081526002602052604090205460ff166105255760405162461bcd60e51b815260206004820181905260248201527f4e6f7420617574686f72697a656420746f207265636f7264206d6174636865736044820152606401610241565b600087815260016020908152604080832089845290915290205460ff16156105885760405162461bcd60e51b815260206004820152601660248201527513585d18da08185b1c9958591e481c9958dbdc99195960521b6044820152606401610241565b604080516101208101825287815260208082018a8152828401898152606084018990526080840188905260a0840187905260c084018690524260e08501523361010085015260008c815280845294852080546001818101835591875293909520845160099094020192835590519382019390935591519091829160028201906106119082610da3565b50606082015160038201906106269082610da3565b506080820151600482015560a0820151600582015560c0820151600682019061064f9082610da3565b5060e0820151600782015561010090910151600890910180546001600160a01b0319166001600160a01b0390921691909117905560008881526001602081815260408084208b855290915291829020805460ff1916909117905551879089907fae26ae35337136b0005d6014e93a21eba0892adfcbc443f057f595688e1dd13e906106e5908a908a908a908a908a903390610e63565b60405180910390a35050505050505050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b82821015610957578382906000526020600020906009020160405180610120016040529081600082015481526020016001820154815260200160028201805461076b90610d1a565b80601f016020809104026020016040519081016040528092919081815260200182805461079790610d1a565b80156107e45780601f106107b9576101008083540402835291602001916107e4565b820191906000526020600020905b8154815290600101906020018083116107c757829003601f168201915b505050505081526020016003820180546107fd90610d1a565b80601f016020809104026020016040519081016040528092919081815260200182805461082990610d1a565b80156108765780601f1061084b57610100808354040283529160200191610876565b820191906000526020600020905b81548152906001019060200180831161085957829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820180546108a390610d1a565b80601f01602080910402602001604051908101604052809291908181526020018280546108cf90610d1a565b801561091c5780601f106108f15761010080835404028352916020019161091c565b820191906000526020600020905b8154815290600101906020018083116108ff57829003601f168201915b505050918352505060078201546020808301919091526008909201546001600160a01b03166040909101529082526001929092019101610723565b505050509050919050565b60006020828403121561097457600080fd5b81356001600160a01b038116811461098b57600080fd5b9392505050565b600080604083850312156109a557600080fd5b50508035926020909101359150565b6000815180845260005b818110156109da576020818501810151868301820152016109be565b506000602082860101526020601f19601f83011685010191505092915050565b60006101208b83528a6020840152806040840152610a1a8184018b6109b4565b90508281036060840152610a2e818a6109b4565b90508760808401528660a084015282810360c0840152610a4e81876109b4565b60e084019590955250506001600160a01b039190911661010090910152979650505050505050565b600060208284031215610a8857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ab657600080fd5b813567ffffffffffffffff80821115610ad157610ad1610a8f565b604051601f8301601f19908116603f01168101908282118183101715610af957610af9610a8f565b81604052838152866020858801011115610b1257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215610b4d57600080fd5b8735965060208801359550604088013567ffffffffffffffff80821115610b7357600080fd5b610b7f8b838c01610aa5565b965060608a0135915080821115610b9557600080fd5b610ba18b838c01610aa5565b955060808a0135945060a08a0135935060c08a0135915080821115610bc557600080fd5b50610bd28a828b01610aa5565b91505092959891949750929550565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610cca57603f198984030185528151610120815185528882015189860152878201518189870152610c3f828701826109b4565b91505060608083015186830382880152610c5983826109b4565b92505050608080830151818701525060a080830151818701525060c08083015186830382880152610c8a83826109b4565b9250505060e0808301518187015250610100808301519250610cb6818701846001600160a01b03169052565b509588019593505090860190600101610c08565b509098975050505050505050565b60208082526022908201527f4f6e6c79206f776e65722063616e20706572666f726d2074686973206163746960408201526137b760f11b606082015260800190565b600181811c90821680610d2e57607f821691505b602082108103610d4e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d9e57600081815260208120601f850160051c81016020861015610d7b5750805b601f850160051c820191505b81811015610d9a57828155600101610d87565b5050505b505050565b815167ffffffffffffffff811115610dbd57610dbd610a8f565b610dd181610dcb8454610d1a565b84610d54565b602080601f831160018114610e065760008415610dee5750858301515b600019600386901b1c1916600185901b178555610d9a565b600085815260208120601f198616915b82811015610e3557888601518255948401946001909101908401610e16565b5085821015610e535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60c081526000610e7660c08301896109b4565b8281036020840152610e8881896109b4565b90508660408401528560608401528281036080840152610ea881866109b4565b91505060018060a01b03831660a083015297965050505050505056fea2646970667358221220f946fd3b7b0d10a9fc55c8d7b99ae58beb71e4f1f01a8ba1231e70bbc16f9e3864736f6c63430008130033";

type TournamentScoresConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TournamentScoresConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TournamentScores__factory extends ContractFactory {
  constructor(...args: TournamentScoresConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TournamentScores & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TournamentScores__factory {
    return super.connect(runner) as TournamentScores__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TournamentScoresInterface {
    return new Interface(_abi) as TournamentScoresInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TournamentScores {
    return new Contract(address, _abi, runner) as unknown as TournamentScores;
  }
}
