server {
    listen			${SSL_PORT} ssl http2 default_server;
    server_name		${SERVER_NAME:-localhost};

    # ── TLS ───────────────────
    ssl_certificate     /etc/nginx/conf/server.crt;
    ssl_certificate_key /etc/nginx/conf/server.key;

    # ── Security headers (optional hardening) ─────────────────────────────────────
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff   always;

    # ── Enable ModSecurity ────────────────────────────────────────────────────────
    modsecurity           on;

    # ── frontend ──────────────────────────────────────
	location / {
		proxy_pass			http://frontend:5173/;
		proxy_set_header	Host				$host;
		proxy_set_header	X-Forwarded-Proto	$scheme;
	}
	
    # ── API ─────────────────────────────────────
    location /api/ {
        proxy_pass         	http://backend:3000/; # ← env BACKEND=http://backend:3000
        proxy_set_header   	Host              	$host;
        proxy_set_header   	X-Real-IP         	$remote_addr;
        proxy_set_header   	X-Forwarded-Proto 	$scheme;
    }



    # ── Websocket ─────────────────────────────────────
	location /socket.io/ {
		proxy_pass http://backend:3000/socket.io/;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_read_timeout 3600s;
		proxy_send_timeout 3600s;
	}

   	# ── Healthcheck ─────────────────────────────────────
	location /healthcheck {
		return 200 'OK';
		add_header Content-Type text/plain;
	}

}
